{"version":3,"sources":["todos/todoitem.js","todos/todo.js","todos/addform.js","todos/header.js","todos/footer.js","App.js","serviceWorker.js","index.js"],"names":["Todoitem","style","margin","background","_this","props","todo","completed","borderBottom","textDecoration","this","react_default","a","createElement","type","float","onChange","mainapp","toggled","bind","id","checked","title","onClick","del","borderRadius","backgroundColor","React","Component","Todolist","list","map","cur_todo","index","todoitem","key","Additem","state","changed","e","setState","target","value","save","preventDefault","newitem","uuid","data","concat","Object","toConsumableArray","savestate","onSubmit","display","name","placeholder","flex","padding","Header","headerstyle","textAlign","h1style","Footer","footerstyle","position","left","right","bottom","Fragment","height","paddingTop","App","console","log","setTimeout","localStorage","setItem","JSON","stringify","current","filter","curr","savedData","parse","getItem","className","header","addform","footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qQAwBeA,6MApBXC,MAAQ,WACJ,MAAO,CACHC,OAAQ,WACRC,WAAYC,EAAKC,MAAMC,KAAKC,UAAY,OAAS,OACjDC,aAAc,mBACdC,eAAgBL,EAAKC,MAAMC,KAAKC,UAAY,eAAiB,iFAIjE,IAAIA,EAAYG,KAAKL,MAAMC,KAAKC,UAChC,OACII,EAAAC,EAAAC,cAAA,OAAKZ,MAAOS,KAAKT,SACbU,EAAAC,EAAAC,cAAA,SAAOC,KAAK,WAAWb,MAAO,CAAEc,MAAO,QAAUC,SAAUN,KAAKL,MAAMY,QAAQC,QAAQC,KAAKT,KAAMA,KAAKL,MAAMC,KAAKc,IAAKC,QAASd,IAC/HI,EAAAC,EAAAC,cAAA,SAAIH,KAAKL,MAAMC,KAAKgB,OACpBX,EAAAC,EAAAC,cAAA,UAAQU,QAASb,KAAKL,MAAMY,QAAQO,IAAIL,KAAKT,KAAMA,KAAKL,MAAMC,KAAKc,IAAKnB,MAAO,CAAEwB,aAAc,MAAOV,MAAO,QAASW,gBAAiB,YAAvI,aAfOC,IAAMC,WCWdC,mLATF,IAAAzB,EAAAM,KACL,OACIA,KAAKL,MAAMyB,KAAKC,IAAI,SAACC,EAAUC,GAC3B,OAAOtB,EAAAC,EAAAC,cAACqB,EAAD,CAAU5B,KAAM0B,EAAUf,QAASb,EAAKC,MAAMY,QAASkB,IAAKF,aAL5DN,IAAMC,4BCiCdQ,6MAhCXC,MAAQ,CACJf,MAAO,MAEXgB,QAAU,SAACC,GACPnC,EAAKoC,SAAS,CAAElB,MAAOiB,EAAEE,OAAOC,WAEpCC,KAAO,SAACJ,GAEJ,GADAA,EAAEK,iBACuB,KAArBxC,EAAKiC,MAAMf,MAAc,CACzB,IAAIuB,EAAU,CACVvB,MAAOlB,EAAKiC,MAAMf,MAClBF,GAAI0B,MACJvC,WAAW,GAEfH,EAAKoC,SAAS,CAAElB,MAAO,KACvBlB,EAAKC,MAAMY,QAAQuB,SAAS,CACxBO,KAAI,GAAAC,OAAAC,OAAAC,EAAA,EAAAD,CAAM7C,EAAKC,MAAMY,QAAQoB,MAAMU,MAA/B,CAAqCF,MAE7CzC,EAAKC,MAAMY,QAAQkC,sFAKvB,OACIxC,EAAAC,EAAAC,cAAA,QAAMuC,SAAU1C,KAAKiC,KAAM1C,MAAO,CAAEoD,QAAS,SACzC1C,EAAAC,EAAAC,cAAA,SAAOC,KAAK,OAAOwC,KAAK,QAAQC,YAAY,yBAAyBb,MAAOhC,KAAK2B,MAAMf,MAAON,SAAUN,KAAK4B,QAASrC,MAAO,CAAEuD,KAAM,KAAMC,QAAS,SACpJ9C,EAAAC,EAAAC,cAAA,SAAOC,KAAK,SAAS4B,MAAM,WAAWzC,MAAO,CAAEuD,KAAM,IAAKC,QAAS,iBA3B7D9B,IAAMC,WCoBb8B,6MApBXC,YAAc,CACVxD,WAAY,OACZD,OAAQ,MACRuD,QAAS,OACTG,UAAW,YAEfC,QAAU,CACN3D,OAAQ,+EAGR,OACIS,EAAAC,EAAAC,cAAA,UAAQZ,MAAOS,KAAKiD,aAChBhD,EAAAC,EAAAC,cAAA,MAAIZ,MAAOS,KAAKmD,SAAhB,kBACAlD,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,0DAdEc,IAAMC,WCyBZkC,6MAvBXC,YAAc,CACVH,UAAW,SACXzD,WAAY,OACZD,OAAQ,MACRuD,QAAS,OACTO,SAAU,QACVC,KAAM,MACNC,MAAO,MACPC,OAAQ,6EAIR,OACIxD,EAAAC,EAAAC,cAACF,EAAAC,EAAMwD,SAAP,KACIzD,EAAAC,EAAAC,cAAA,OAAKZ,MAAO,CAAEoE,OAAQ,MAAOC,WAAY,WACzC3D,EAAAC,EAAAC,cAAA,UAAQZ,MAAOS,KAAKqD,aAChBpD,EAAAC,EAAAC,cAAA,KAAGZ,MAAO,CAAEC,OAAQ,MAAOsD,KAAM,KAAMI,UAAW,WAAYjD,EAAAC,EAAAC,cAAA,0BAAyBF,EAAAC,EAAAC,cAAA,kDAlBtFc,IAAMC,WCiEZ2C,oNA1DblC,MAAQ,CACNU,KAAM,MAcRI,UAAY,WACVqB,QAAQC,IAAI,gCACZC,WAAW,WACTC,aAAaC,QAAQ,OAAQC,KAAKC,UAAU1E,EAAKiC,MAAMU,QACtD,QAIL7B,QAAU,SAACE,GACThB,EAAKoC,SAAS,CACZO,KAAM3C,EAAKiC,MAAMU,KAAKhB,IAAI,SAACgD,GAIzB,OAHIA,EAAQ3D,KAAOA,IACjB2D,EAAQxE,WAAawE,EAAQxE,WAExBwE,MAGX3E,EAAK+C,eAIP3B,IAAM,SAACJ,GACLhB,EAAKoC,SAAS,CACZO,KAAKE,OAAAC,EAAA,EAAAD,CAAK7C,EAAKiC,MAAMU,KAAKiC,OAAO,SAACC,GAAD,OAAWA,EAAK7D,KAAOA,OAE1DhB,EAAK+C,gGAjCL,IAAI+B,EAAYL,KAAKM,MAAMR,aAAaS,QAAQ,SAC3CF,IACHA,EAAY,IAEdxE,KAAK8B,SAAS,CAAEO,KAAMmC,qCAkCtB,OACEvE,EAAAC,EAAAC,cAAA,OAAKwE,UAAU,OACb1E,EAAAC,EAAAC,cAACyE,EAAD,MACA3E,EAAAC,EAAAC,cAAC0E,EAAD,CAAStE,QAASP,OAClBC,EAAAC,EAAAC,cAACP,EAAD,CAAUwB,KAAMpB,KAAK2B,MAAMU,KAAM9B,QAASP,OAC1CC,EAAAC,EAAAC,cAAC2E,EAAD,cAnDU7D,IAAMC,YCIJ6D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOpF,EAAAC,EAAAC,cAACmF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.2ac152c0.chunk.js","sourcesContent":["import React from 'react'\n\n\nclass Todoitem extends React.Component {\n    style = () => {\n        return {\n            margin: \"auto 0px\",\n            background: this.props.todo.completed ? \"#567\" : \"#999\",\n            borderBottom: \"2px dashed black\",\n            textDecoration: this.props.todo.completed ? \"line-through\" : \"none\"\n        }\n    }\n    render() {\n        let completed = this.props.todo.completed\n        return (\n            <div style={this.style()}>\n                <input type=\"checkbox\" style={{ float: \"left\" }} onChange={this.props.mainapp.toggled.bind(this, this.props.todo.id)} checked={completed}></input>\n                <p>{this.props.todo.title}</p>\n                <button onClick={this.props.mainapp.del.bind(this, this.props.todo.id)} style={{ borderRadius: \"50%\", float: \"right\", backgroundColor: \"#ff0000\" }}>x</button>\n            </div>\n        )\n    }\n}\n\nexport default Todoitem;","import React from 'react';\nimport Todoitem from './todoitem';\n\nclass Todolist extends React.Component {\n\n    render() {\n        return (\n            this.props.list.map((cur_todo, index) => {\n                return <Todoitem todo={cur_todo} mainapp={this.props.mainapp} key={index} />\n            })\n        )\n    }\n}\n\nexport default Todolist;","import React from 'react'\nimport uuid from 'uuid'\n\nclass Additem extends React.Component {\n    state = {\n        title: \"\"\n    }\n    changed = (e) => {\n        this.setState({ title: e.target.value })\n    }\n    save = (e) => {\n        e.preventDefault();\n        if (this.state.title !== \"\") {\n            var newitem = {\n                title: this.state.title,\n                id: uuid(),\n                completed: false\n            }\n            this.setState({ title: \"\" })\n            this.props.mainapp.setState({\n                data: [...this.props.mainapp.state.data, newitem]\n            })\n            this.props.mainapp.savestate()\n        }\n\n    }\n    render() {\n        return (\n            <form onSubmit={this.save} style={{ display: \"flex\" }}>\n                <input type=\"text\" name=\"title\" placeholder=\"Title For the new Todo\" value={this.state.title} onChange={this.changed} style={{ flex: \"10\", padding: \"5px\" }}></input>\n                <input type=\"submit\" value=\"Add Todo\" style={{ flex: \"1\", padding: \"5px\" }}></input>\n            </form>\n        )\n    }\n}\n\nexport default Additem;","import React from 'react';\n\nclass Header extends React.Component {\n    headerstyle = {\n        background: \"#89a\",\n        margin: \"0px\",\n        padding: \"10px\",\n        textAlign: \"center\"\n    }\n    h1style = {\n        margin: \"0px\"\n    }\n    render() {\n        return (\n            <header style={this.headerstyle}>\n                <h1 style={this.h1style}>Always On Time</h1>\n                <p><em>A Very compact in browser Todo app.</em></p>\n            </header>\n        )\n    }\n\n\n}\nexport default Header;","import React from 'react'\n\nclass Footer extends React.Component {\n\n    footerstyle = {\n        textAlign: \"center\",\n        background: \"#89a\",\n        margin: \"0px\",\n        padding: \"10px\",\n        position: \"fixed\",\n        left: \"0px\",\n        right: \"0px\",\n        bottom: \"0\"\n    }\n    render() {\n\n        return (\n            <React.Fragment>\n                <div style={{ height: \"20%\", paddingTop: \"100px\" }}></div>\n                <footer style={this.footerstyle}>\n                    <p style={{ margin: \"0px\", flex: \"10\", textAlign: \"center\" }}><strong>Made by:</strong><em> Pukar Giri (Daring Joker)</em></p>\n                </footer>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Footer;","import React from 'react';\nimport Todolist from './todos/todo.js'\nimport Additem from './todos/addform.js'\nimport Header from './todos/header.js'\nimport Footer from './todos/footer.js'\nimport './App.css';\n\n\nclass App extends React.Component {\n  state = {\n    data: []\n  }\n\n\n  componentDidMount() {\n    // localStorage.clear()\n    let savedData = JSON.parse(localStorage.getItem(\"data\"));\n    if (!savedData) {\n      savedData = []\n    }\n    this.setState({ data: savedData })\n  }\n\n\n  savestate = () => {\n    console.log(\"saving data to local storage\")\n    setTimeout(() => {\n      localStorage.setItem(\"data\", JSON.stringify(this.state.data))\n    }, 1000);\n  }\n\n\n  toggled = (id) => {\n    this.setState({\n      data: this.state.data.map((current) => {\n        if (current.id === id) {\n          current.completed = !current.completed\n        }\n        return current\n      })\n    })\n    this.savestate()\n  }\n\n\n  del = (id) => {\n    this.setState({\n      data: [...this.state.data.filter((curr) => (curr.id !== id))]\n    })\n    this.savestate()\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Additem mainapp={this} />\n        <Todolist list={this.state.data} mainapp={this} />\n        <Footer />\n      </div>\n    );\n  }\n\n\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}